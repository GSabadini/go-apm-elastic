version: '3.6'

services:
  # app:
  #   container_name: "app"
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./:/app
  #   networks:
  #     - apm 

  elasticsearch:
    container_name: elasticsearch
    hostname: "{{.Node.Hostname}}-elasticsearch"
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    environment:
      - cluster.name=elastic-test
      - node.name=node01
      - discovery.zen.minimum_master_nodes=1
      - discovery.type=single-node
      - discovery.seed_hosts=elasticsearch
      - network.host=0.0.0.0
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elastic

  kibana:
    container_name: kibana
    hostname: "{{.Node.Hostname}}-kibana"
    image: docker.elastic.co/kibana/kibana:$ELASTIC_VERSION
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - SERVER_NAME="{{.Node.Hostname}}-kibana"
    volumes:
      - kibana:/usr/share/kibana/data
    ports:
      - "5601:5601"
    networks:
      - elastic
    depends_on:
      - elasticsearch

  apm-server:
    container_name: apm-server
    hostname: "{{.Node.Hostname}}-apm_server"
    image: docker.elastic.co/apm/apm-server:$ELASTIC_VERSION
    command: --strict.perms=false -e  # -e flag to log to stderr and disable syslog/file output
    volumes:
      - ./config/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    ports:
      - "8200:8200"
    networks:
      - elastic
    depends_on:
      - elasticsearch

volumes:
  elasticsearch:
  kibana:

networks:
  elastic: